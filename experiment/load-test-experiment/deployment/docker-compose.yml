version: "3.8"
services:

  consul:
    container_name: consul
    hostname: consul
    image: consul
    ports:
      - "8500:8500"
      - "8300:8300"
    volumes:
      - ./metrics/consul.json:/consul/config/consul.json

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    #    network_mode: host
    user: "1000"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics/prometheus_db:/var/lib/prometheus
      - ./metrics/prometheus_db:/prometheus
      - ./metrics/prometheus_db:/etc/prometheus
      - ./metrics/alert.rules:/etc/prometheus/alert.rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.route-prefix=/'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - '9090:9090'
    environment:
      SERVICE_IGNORE: any_value

  grafana:
    container_name: grafana
    image: grafana/grafana
    #    network_mode: host
    user: "1000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      SERVICE_IGNORE: any_value
    volumes:
      - ./metrics/grafana_db:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - '3000:3000'

#  servlet:
#    container_name: servlet
#    hostname: servlet
#    image: bmd007/reactiveland-experiment-servlet
#    ports:
#      - "8001:8001"
#    depends_on:
#      - consul
#      - prometheus
#      - grafana
#    environment:
#      SERVICE_IGNORE: any_value

#  servlet-client:
#    container_name: servlet-client
#    hostname: servlet
#    image: bmd007/reactiveland-experiment-servlet-client
#    ports:
#      - "8002:8002"
#    depends_on:
#      - servlet
#      - consul
#      - prometheus
#      - grafana
#    environment:
#      SERVICE_IGNORE: any_value

  #  webflux:
  #    container_name: webflux
  #    hostname: servlet
  #    image: bmd007/reactiveland-experiment-webflux
  #    ports:
  #      - "8003:8003"
  #    depends_on:
  #      - consul
  #      - prometheus
  #      - grafana
  #    environment:
  #      SERVICE_IGNORE: any_value

  #  webflux-client:
  #    container_name: webflux-client
  #    hostname: servlet
  #    image: bmd007/reactiveland-experiment-webflux-client
  #    ports:
  #      - "8004:8004"
  #    depends_on:
  #      - webflux
  #      - consul
  #      - prometheus
  #      - grafana
  #    environment:
  #      SERVICE_IGNORE: any_value

  # Registrator to register services in consul
  registrator:
    container_name: registrator
    image: gliderlabs/registrator
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: "-internal consul://consul:8500"
    depends_on:
      - consul
